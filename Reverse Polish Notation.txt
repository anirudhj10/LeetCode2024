Reverse Polish Notation


Keep pushing int(operators) to stack until you encounter an operand, when you do pop the last 2 operands and perform the operation and push the result to stack. (remember to use  int(for division)




class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        print(len(tokens))
        stack = []
        for token in tokens:
            if token not in "+-*/":
                stack.append(int(token))
            else:
                operand2 = stack.pop()
                operand1 = stack.pop()


                if token == '+':
                    stack.append(operand1 + operand2)
                elif token == '-':
                    stack.append(operand1 - operand2)
                elif token == '*':
                    stack.append(operand1 * operand2)
                elif token == '/':
                    stack.append(int(operand1 / operand2))

.
        
        return(stack.pop())