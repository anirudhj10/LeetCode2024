Find minimum in rotated sorted array


Find point of rotation by comparing adjacent elements -> then using list slicing, 
Return the first element of the second sorted half of the array

#Binary




class Solution:
    def findMin(self, nums: List[int]) -> int:
        rotation = 0
        for i in range(len(nums)-1):
            if nums[i] < nums[i+1]:
                continue
            else:
                rotation = i + 1
                break
                
        return(list(nums[rotation:])[0])